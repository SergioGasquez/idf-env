---
name: build-idf-env

on:
  push:
    tags:
      - v*

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-idf-env:
    name: Build idf-env
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            TARGET: macos
            BINARY_NAME: idf-env
          - os: ubuntu-latest
            TARGET: linux-amd64
            BINARY_NAME: idf-env
          - os: windows-latest
            TARGET: win64
            BINARY_NAME: idf-env.exe
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo build --release --all-features
      - name: Sign artifact
        if: matrix.os == 'windows-latest'
        env:
          CERTIFICATE: ${{ secrets.CERTIFICATE }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
        shell: pwsh
        run: ./Sign-File.ps1 -Path target/release/${{matrix.BINARY_NAME}}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: target/release/${{matrix.BINARY_NAME}}
          asset_name: ${{matrix.TARGET}}/${{matrix.BINARY_NAME}}
          asset_content_type: application/octet-stream
...
